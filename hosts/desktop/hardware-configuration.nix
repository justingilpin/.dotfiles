# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "ahci" "usbhid" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/6d55257b-e45e-4c2c-8602-a6e234d5be42";
      fsType = "ext4";
    };

  boot.initrd.luks.devices."luks-f7d0c416-894c-4b74-8a63-061ff4513e3d".device = "/dev/disk/by-uuid/f7d0c416-894c-4b74-8a63-061ff4513e3d";

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/B0AB-CECA";
      fsType = "vfat";
    };

  fileSystems."/mnt/ssdstorage" =
    { device = "/dev/disk/by-uuid/887C874A7C8731CC";
      fsType = "ntfs3";
    };

  fileSystems."/mnt/storage" =
    { device = "/dev/disk/by-uuid/34E2AD0DE2ACD480";
      fsType = "ntfs3";
    };

  fileSystems."/mnt/windows" =
    { device = "/dev/disk/by-uuid/8644AF8B44AF7C95";
      fsType = "ntfs3";
    };

  fileSystems."/mnt/m2storage" =
    { device = "/dev/disk/by-uuid/58BE882EBE88072A";
      fsType = "ntfs3";
    };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp42s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.tailscale0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
